---
- name: Run the equivalent of "pacman -Syu" as a separate step
  community.general.pacman:
    update_cache: true
    upgrade: true
- name: Ensure git and github-cli are installed
  community.general.pacman:
    name:
     - openssh
     - git
     - github-cli
- name: Add ghcli user using a token
  become: true
  become_user: '{{ username }}'
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: 'echo {{ github_token }} | gh auth login --git-protocol ssh --with-token --skip-ssh-key'
- name: Add ssh key
  become: true
  become_user: '{{ username }}'
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: 'gh ssh-key add /home/{{ username }}/.ssh/id_ed25519.pub'
- name: Add dotfiles remote and clone it 
  become: true
  become_user: '{{ username }}'
  ansible.builtin.shell:
    chdir: '/home/{{ username }}'
    cmd: 'git init && git remote add origin {{ dotfiles_repo_url }} ; git fetch --all && git reset --hard origin/main'
    executable: /bin/bash
  register: add_result
  changed_when: add_result.rc == 0
  failed_when:
    - add_result.rc != 0
    - add_result.stderr | default('') is not search("remote .* already exists")
- name: Install pacman packages from pkglist.txt
  become: true
  ansible.builtin.shell:
    cmd: 'pacman -S --needed $(comm -12 <(pacman -Slq | sort) <(sort /home/{{ username }}/.config/pkglist.txt))'
    executable: /bin/bash
  register: result
  changed_when: result.rc == 0
  failed_when:
    - result.rc != 0
- name: Delete orphan packages
  become: true
  ansible.builtin.shell:
    cmd: 'pacman -Qqd | pacman --noconfirm -Rsu -'
  ignore_errors: true
- name: Make pkglist.txt
  become: true
  ansible.builtin.shell:
    cmd: 'pacman -Qqe > /home/{{ username }}/.config/pkglist.txt'
    executable: /bin/bash
  register: result
  changed_when: result.rc == 0
  failed_when:
    - result.rc != 0
